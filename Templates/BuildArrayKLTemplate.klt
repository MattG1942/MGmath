// define available <T> values
# Substitutes
# <T> Num

// base Types: UInt8 SInt8 UInt16 SInt16 UInt32 SInt32 UInt64 SInt64 Float32 Float64 Boolean String
// Default groups: Floats, Ints, UInts, SInts, Num, AllBase
// Substitutes are space seperated.
// Do not leave White space on the end of any line starting with '#'

# Filename "BuildArrayKL.kl"

// Substitutions and Filename are optional; Default Substitution is <T> Num, Default Filename is ParsedKL.KL
// coments using the // notation will be ignored up to this point, infact any line not starting '#' will be ignored.
// within the functions section they will be parsed as a kl comment.
// currently only 1 substitute is allowed per function.
// However by generating a new template from the resulting code to run the Parser a second time multiple substitutes may be acheived.

# Functions
#
// Build Array From Constant. 
// Linear interpolate and Linearly interpolated arrays

// returns an array where filled with the specified value

// All Numerical Base types Suported
// Future developement:
// Vector types to be added

# <T>
operator fillArray<T><<<index>>>(<T> a, io <T> returnArray[]) {
  returnArray[index] = a;
}
function <T>[] buildArrayFromConstant(Integer size, <T> value) {
  <T> returnArray[];
  returnArray.resize(size);
  fillArray<T><<<size>>>(value, returnArray);
  return returnArray;
}

